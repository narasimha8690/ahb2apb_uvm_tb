// ahb_monitor.sv
class ahb_monitor extends uvm_component;
  `uvm_component_utils(ahb_monitor)
  virtual ahb_if mon_vif;
  uvm_analysis_port#(ahb_txn) aport;

  function new(string name, uvm_component parent); super.new(name,parent); endfunction
  function void build_phase(uvm_phase phase);
    aport = new("aport", this);
    if(!uvm_config_db#(virtual ahb_if)::get(this, "", "vif", mon_vif))
      `uvm_fatal(get_type_name(),"No AHB vif")
  endfunction

  task run_phase(uvm_phase phase);
    ahb_txn t;
    forever begin
      @(posedge mon_vif.HCLK);
      if (mon_vif.HTRANS == 2'b10) begin // NONSEQ addr phase
        t = ahb_txn::type_id::create("t");
        t.addr  = mon_vif.HADDR;
        t.write = mon_vif.HWRITE;
        t.size  = mon_vif.HSIZE;

        // wait data phase done
        do @(posedge mon_vif.HCLK); while(!mon_vif.HREADY);
        t.resp = mon_vif.HRESP;
        if (!t.write) t.rdata = mon_vif.HRDATA;
        else          t.wdata = mon_vif.HWDATA;

        aport.write(t);
      end
    end
  endtask
endclass
